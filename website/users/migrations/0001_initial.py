# Generated by Django 3.2 on 2022-06-15 13:04

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UsersTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("thumbnail_sizes", models.JSONField()),
                ("can_use_original_image_link", models.BooleanField()),
                ("can_fetch_expiring_link", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "previous_user_tier",
                    models.CharField(max_length=1000, verbose_name=2715759603008),
                ),
                ("username", models.CharField(max_length=30, unique=True)),
                ("email", models.EmailField(max_length=250, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=30, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2022, 6, 15, 13, 4, 12, 589753, tzinfo=utc
                        )
                    ),
                ),
                ("receive_newsletter", models.BooleanField(default=False)),
                ("birth_date", models.DateTimeField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=300, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("about_me", models.TextField(blank=True, max_length=100, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "user_tier",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.userstier",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
